---
- name: Add backports repository
  apt_repository:
    repo: "deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main contrib non-free"
    state: present
    filename: backports

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  changed_when: false

- name: Get current kernel version
  ansible.builtin.command: uname -r
  changed_when: false
  register: kernel_version_zfs

- name: Install Linux headers for current kernel
  ansible.builtin.apt:
    name: "linux-headers-{{ kernel_version_zfs.stdout }}"
    state: present
    update_cache: true

- name: Check if distribution is Debian Bookworm
  ansible.builtin.shell: grep -E '^VERSION_CODENAME=bookworm$' /etc/os-release
  register: distro_check
  changed_when: false
  ignore_errors: yes

- name: Set fact for Bookworm check
  ansible.builtin.set_fact:
    is_bookworm: "{{ distro_check.rc == 0 }}"

- name: Check if distribution is Debian Trixie
  ansible.builtin.shell: grep -E '^VERSION_CODENAME=trixie$' /etc/os-release
  register: trixie_check
  changed_when: false
  ignore_errors: yes

- name: Set fact for Trixie check
  ansible.builtin.set_fact:
    is_trixie: "{{ trixie_check.rc == 0 }}"


- name: Install required packages
  apt:
    name:
      - zfsutils-linux
      - zfs-dkms
    state: present
    default_release: "{{ ansible_distribution_release }}-backports"
  register: zfs_installed
  when: is_bookworm


- name: Install required packages
  apt:
    name:
      - zfsutils-linux
      - zfs-dkms
    state: present
  register: zfs_installed
  when: is_trixie


- name: Reboot system if zfs packages were installed
  reboot:
    msg: "Rebooting system due to package installation"
    reboot_timeout: 600
  when: zfs_installed.changed


- name: Load ZFS kernel module
  modprobe:
    name: zfs
    state: present

- name: Enable ZFS module loading on boot
  lineinfile:
    path: /etc/modules-load.d/zfs.conf
    line: 'zfs'
    create: yes
    mode: '0644'

- name: Create ZFS cache directory
  file:
    path: /etc/zfs/zfs-list.cache
    state: directory
    mode: '0755'

- name: Enable ZFS cache
  lineinfile:
    path: /etc/default/zfs
    regexp: '^ZFS_LIST_CACHE='
    line: 'ZFS_LIST_CACHE=1'
    create: yes

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start ZFS systemd services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - zfs.target
    - zfs-import.target
    - zfs-import-cache.service
    - zfs-mount.service
    - zfs-share.service
  changed_when: false

- name: Import all ZFS pools
  command: zpool import -af
  register: zpool_import
  # changed_when: zpool_import.rc == 0
  failed_when: zpool_import.rc != 0 and "no pools available" not in zpool_import.stderr
  changed_when: false
  
