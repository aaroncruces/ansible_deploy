resource "proxmox_virtual_environment_container" "{{ hostname }}" {
  node_name = "{{ inventory_hostname }}"
  vm_id = {{ vm_id }} # Unique ID; adjust to avoid conflicts
  description = "{{ description }}"
  started = true
  unprivileged = false # Unprivileged for security; works with device passthrough
  initialization {
    hostname = "{{ hostname }}"
    user_account {
      password = "{{ lxc_password }}"
    }
    ip_config {
      ipv4 {
        address = "{{ ip_address }}" # Adjust IP; use "dhcp" for dynamic
        gateway = "{{ gateway }}"
      }
    }
  }
  cpu {
    cores = {{ cores }} # Adjust as needed
  }
  memory {
    dedicated = {{ memory_dedicated }} # 16 GB RAM (in MB)
    swap = {{ swap }} # 1 GB swap (in MB)
  }
  disk {
    datastore_id = "{{ datastore_id }}"
    size = {{ disk_size }} # 32 GB disk
  }
  features {
    nesting = true # Required for Docker inside LXC
  }
  network_interface {
    name = "eth0"
    bridge = "{{ bridge }}" # Your bridge
    enabled = true
  }
  operating_system {
    template_file_id = "{{ template_file_id }}"
    type = "{{ os_type }}"
  }
  # Device passthrough for NVIDIA GPUs (adjust paths based on ls /dev/nvidia* on host)
  device_passthrough {
    path = "/dev/nvidia0"
    mode = "0666" # rw for all; adjust for security (e.g., "0660" if using video group)
    uid = 0 # root user on host
    gid = 0 # root group on host (or video/render gid like 44/106 if applicable)
    deny_write = false # Allow writes
  }
  device_passthrough {
    path = "/dev/nvidiactl"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
  device_passthrough {
    path = "/dev/nvidia-uvm"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
  device_passthrough {
    path = "/dev/nvidia-uvm-tools"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
  device_passthrough {
    path = "/dev/nvidia-modeset"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
    device_passthrough {
    path = "/dev/nvidia-caps/nvidia-cap1"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
  device_passthrough {
    path = "/dev/nvidia-caps/nvidia-cap2"
    mode = "0666"
    uid = 0
    gid = 0
    deny_write = false
  }
}

resource "null_resource" "install_ansible_{{ hostname }}" {
  depends_on = [proxmox_virtual_environment_container.{{ hostname }}]

  connection {
    type     = "ssh"
    user     = "root"
    password = "{{ lxc_password }}"
    host     = split("/", "{{ ip_address }}")[0]  # Extracts the IP from CIDR notation (e.g., 192.168.1.100 from 192.168.1.100/24)
  }

  provisioner "remote-exec" {
    inline = [
      "apt update -y",
      "apt install ansible -y"
    ]
  }
}